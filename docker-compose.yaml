version: '3'

networks:
  spring:
    driver: bridge
  mongo:
    driver: bridge


services:

  eureka-server:
    build:
      context: ./EurekaServer/.
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring

  order-service:
    build:
      context: ./OrderService/.
    depends_on:
      - eureka-server
      - postgres-order
    container_name: order-service
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5432/${POSTGRES_ORDER_DATABASE}?currentSchema=${POSTGRES_ORDER_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    ports:
      - "8083:8083"
    networks:
      - spring

  product-service:
    build:
      context: ./ProductService/.
    depends_on:
      - eureka-server
      - postgres-product
    container_name: product-service
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-product:5432/${POSTGRES_PRODUCT_DATABASE}?currentSchema=${POSTGRES_PRODUCT_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    ports:
      - "8081:8081"
    networks:
      - spring

  user-service:
    build:
      context: ./UserService/.
    depends_on:
      - eureka-server
      - postgres-user
    container_name: user-service
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/${POSTGRES_USER_DATABASE}?currentSchema=${POSTGRES_USER_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    ports:
      - "8082:8082"
    networks:
      - spring

  review-service:
    build:
      context: ./ReviewService/.
    depends_on:
      - eureka-server
      - mongodb
    container_name: review-service
    env_file:
      - .env
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_REVIEW_DATABASE}?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    ports:
      - "8084:8084"
    networks:
      - spring

  postgres-user:
    image: "postgres:16-alpine"
    container_name: postgres-user
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_USER_DATABASE}
    ports:
      - "5435:5432"
    networks:
      - spring

  postgres-order:
    image: "postgres:16-alpine"
    container_name: postgres-order
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_ORDER_DATABASE}
    ports:
      - "5433:5432"
    networks:
      - spring

  postgres-product:
    image: "postgres:16-alpine"
    container_name: postgres-product
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_PRODUCT_DATABASE}
    ports:
      - "5434:5432"
    networks:
      - spring

  mongodb:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_REVIEW_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - '27017:27017'
    networks:
      - spring
      - mongo

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: "27017"
    ports:
      - "27018:8081"
    networks:
      - mongo
    depends_on:
      - mongodb
